## Bitnami WordPress image version
## ref: https://hub.docker.com/r/bitnami/wordpress/tags/
##
image:
  registry: docker.io
  repository: bitnami/wordpress
  tag: 4.9.8-debian-9
  pullPolicy: IfNotPresent

## User of the application
wordpressUsername: username

## Application password
## Defaults to a random 10-character alphanumeric string if not set
wordpressPassword: password

## Admin email
wordpressEmail: email@example.com

## First name
wordpressFirstName: Matuzalem

## Last name
wordpressLastName: Muller

## Blog name
wordpressBlogName: Undergraduate Thesis - Cloud infrastructure & Storage

## Table prefix
wordpressTablePrefix: wp_

## Set to `yes` to allow the container to be started with blank passwords
allowEmptyPassword: "no"

replicaCount: 1

externalDatabase:
## All of these values are only used when mariadb.enabled is set to false
  host: mysql.default.svc.cluster.local
  user: database_user
  password: "database_password"
  database: wordpress_db
  port: 3306

## MariaDB chart configuration
mariadb:
  enabled: false
  replication:
    enabled: false
  db:
    name: bitnami_wordpress
    user: bn_wordpress
  # rootUser:
  # password:

  ## Enable persistence using Persistent Volume Claims
  master:
    persistence:
      enabled: true
      storageClass: "rook-ceph-block"
      accessMode: ReadWriteOnce
      size: 8Gi

## Kubernetes configuration
serviceType: ClusterIP

## Enable client source IP preservation
serviceExternalTrafficPolicy: Local

## Allow health checks to be pointed at the https port
healthcheckHttps: true

## Configure extra options for liveness and readiness probes
livenessProbe:
  initialDelaySeconds: 120
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
readinessProbe:
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

## Configure the ingress resource that allows you to access the
## Wordpress installation. Set up the URL
ingress:
  ## Set to true to enable ingress record generation
  enabled: true
  hosts:
  - name: www.wordpress.teia.cc
    tls: true
    tlsSecret: tls-secret
    ## If tls is set to true,  annotation ingress.kubernetes.io/secure-backends: "true" will automatically be set
    annotations:
      kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: true
  secrets:

## Enable persistence using Persistent Volume Claims
persistence:
  enabled: true
  storageClass: "rook-ceph-block"
  # existingClaim: your-claim
  accessMode: ReadWriteOnce
  size: 5Gi

## Configure resource requests and limits
resources:
  requests:
    memory: 3.0Gi
    cpu: 500m

## Node labels for pod assignment
nodeSelector:
  node: worker

## Tolerations for pod assignment
tolerations: []

## Affinity for pod assignment
affinity: {}
