## Bitnami WordPress image version
## ref: https://hub.docker.com/r/bitnami/wordpress/tags/
##
image:
  registry: docker.io
  repository: bitnami/wordpress
  tag: 4.9.8-debian-9
  pullPolicy: IfNotPresent

## User of the application
wordpressUsername: matuzalemmuller

## Application password
## Defaults to a random 10-character alphanumeric string if not set
wordpressPassword: test_password

## Admin email
wordpressEmail: matuzalem.m@aluno.ifsc.edu.br

## First name
wordpressFirstName: Matuzalem

## Last name
wordpressLastName: Muller

## Blog name
wordpressBlogName: Undergraduate Thesis - Matuzalem

## Table prefix
wordpressTablePrefix: wp_

## Set to `yes` to allow the container to be started with blank passwords
allowEmptyPassword: "no"

replicaCount: 1

externalDatabase:
## All of these values are only used when mariadb.enabled is set to false
  host: mysql.default.svc.cluster.local
  user: database_user
  password: "database_password"
  database: wordpress_db
  port: 3306

## MariaDB chart configuration
mariadb:
  enabled: false
  replication:
    enabled: false
  db:
    name: bitnami_wordpress
    user: bn_wordpress
  # password:
  # rootUser:
  # password:

  ## Enable persistence using Persistent Volume Claims
  master:
    persistence:
      enabled: true
      storageClass: "rook-ceph-block"
      accessMode: ReadWriteOnce
      size: 8Gi

## Kubernetes configuration
## For minikube, set this to NodePort, elsewhere use LoadBalancer or ClusterIP
serviceType: ClusterIP
# serviceType: NodePort
## nodePorts:
# nodePorts:
#  http: "30000"
#  https: "30001"

## Enable client source IP preservation
serviceExternalTrafficPolicy: Local

## Allow health checks to be pointed at the https port
healthcheckHttps: false

## Configure extra options for liveness and readiness probes
livenessProbe:
  initialDelaySeconds: 120
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
readinessProbe:
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

## Configure the ingress resource that allows you to access the
## Wordpress installation. Set up the URL
ingress:
  ## Set to true to enable ingress record generation
  enabled: true
  hosts:
  - name: www.wordpress.teia.cc

    ## Set this to true in order to enable TLS on the ingress record
    ## A side effect of this will be that the backend wordpress service will be connected at port 443
    tls: true

    ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
    tlsSecret: tls-secret

    ## Ingress annotations done as key:value pairs
    ## If you're using kube-lego, you will want to add:
    ## kubernetes.io/tls-acme: true
    ##
    ## For a full list of possible ingress annotations, please see
    ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/annotations.md
    ##
    ## If tls is set to true,  annotation ingress.kubernetes.io/secure-backends: "true" will automatically be set
    annotations:
    #  kubernetes.io/ingress.class: nginx
    #  kubernetes.io/tls-acme: true

  secrets:
  ## If you're providing your own certificates, please use this to add the certificates as secrets
  ## key and certificate should start with -----BEGIN CERTIFICATE----- or
  ## -----BEGIN RSA PRIVATE KEY-----
  ##
  ## name should line up with a tlsSecret set further up
  ## If you're using kube-lego, this is unneeded, as it will create the secret for you if it is not set
  ##
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  # - name: wordpress.local-tls
  #   key:
  #   certificate:

## Enable persistence using Persistent Volume Claims
persistence:
  enabled: true
  storageClass: "rook-ceph-block"
  # existingClaim: your-claim
  accessMode: ReadWriteOnce
  size: 5Gi

## Configure resource requests and limits
resources:
  requests:
    memory: 1.5Gi
    cpu: 400m

## Node labels for pod assignment
nodeSelector:
  node: worker

## Tolerations for pod assignment
tolerations: []

## Affinity for pod assignment
affinity: {}
